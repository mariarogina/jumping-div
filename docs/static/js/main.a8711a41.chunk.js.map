{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","classNames","animationFinished","showAnimationStartLabel","startStopAnimation","setState","onAnimationStart","onAnimationEnd","this","displayState","displayStateAnimationStart","className","style","display","onMouseEnter","type","React","Component","rootElement","document","getElementById","ReactDOM","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"+OAKMA,E,4MACJC,MAAQ,CACNC,WAAY,GACZC,mBAAmB,EACnBC,yBAAyB,G,EAG3BC,mBAAqB,WACnB,IAAQH,EAAe,EAAKD,MAApBC,WAER,EAAKI,SAAS,CAAEJ,WAAYA,EAAa,GAAK,e,EAGhDK,iBAAmB,WACjB,EAAKD,SAAS,CACZH,mBAAmB,EACnBC,yBAAyB,K,EAI7BI,eAAiB,WACf,EAAKF,SAAS,CACZH,mBAAmB,EACnBC,yBAAyB,K,4CAI7B,WACE,MAAuDK,KAAKR,MAApDE,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,wBACrBM,EAAeP,EAAoB,QAAU,OAC7CQ,GACHR,GAAqBC,EAA0B,QAAU,OAE5D,OACE,sBAAKQ,UAAU,MAAf,UAGE,qBAAKC,MAAO,CAAEC,QAASH,GAAvB,SACE,mDAEF,qBAAKE,MAAO,CAAEC,QAASJ,GAAvB,SACE,sDAGF,qBAAKE,UAAU,OAAf,SACE,qBACCG,aAAcN,KAAKJ,mBAClBO,UAAS,cAASH,KAAKR,MAAMC,YAC7BM,eAAgBC,KAAKD,eACrBD,iBAAkBE,KAAKF,iBAJzB,SAMI,wBAAQS,KAAK,SAASJ,UAAU,kBAAhC,qC,GAnDIK,IAAMC,WA8DlBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAC,EAAD,IAASJ,GAEVnB,QC1DAwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdH,IAASC,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,EAAD,MAEFb,SAASC,eAAe,SAM1BG,M","file":"static/js/main.a8711a41.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    classNames: \"\",\n    animationFinished: false,\n    showAnimationStartLabel: false\n  };\n\n  startStopAnimation = () => {\n    const { classNames } = this.state;\n\n    this.setState({ classNames: classNames ? \"\" : \"animation\" });\n  };\n\n  onAnimationStart = () => {\n    this.setState({\n      animationFinished: false,\n      showAnimationStartLabel: true\n    });\n  };\n\n  onAnimationEnd = () => {\n    this.setState({\n      animationFinished: true,\n      showAnimationStartLabel: false\n    });\n  };\n\n  render() {\n    const { animationFinished, showAnimationStartLabel } = this.state;\n    const displayState = animationFinished ? \"block\" : \"none\";\n    const displayStateAnimationStart =\n      !animationFinished && showAnimationStartLabel ? \"block\" : \"none\";\n\n    return (\n      <div className=\"App\">\n        \n\n        <div style={{ display: displayStateAnimationStart }}>\n          <h1>Animation Start</h1>\n        </div>\n        <div style={{ display: displayState }}>\n          <h1>Animation Finished</h1>\n        </div>\n\n        <div className=\"demo\">\n          <div\n           onMouseEnter={this.startStopAnimation}\n            className={`box ${this.state.classNames}`}\n            onAnimationEnd={this.onAnimationEnd}\n            onAnimationStart={this.onAnimationStart}>\n\n              <button type=\"button\" className=\"btn btn-warning\">Make me Move</button>\n            </div>\n       \n          \n          \n        </div>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}